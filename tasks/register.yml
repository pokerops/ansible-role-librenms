---
- name: Manage client device registrations
  delegate_to: "{{ librenms_client_delegate }}"
  block:

    - name: Query librenms devices
      ansible.builtin.uri:
        url: "{{ librenms_url }}/api/v0/devices?type=all"
        headers:
          X-Auth-Token: "{{ librenms_api_token }}"
        return_content: true
        validate_certs: false
      register: _librenms_devices
      run_once: true
      tags: always

    - name: Map librenms registrations
      ansible.builtin.set_fact:
        librenms_hostnames: "{{ _librenms_devices.json.devices | map(attribute='hostname') | list }}"
      tags: always

    - name: Register librenms devices
      when: librenms_client_state != 'absent'
      block:

        - name: Create librenms devices
          ansible.builtin.uri:
            url: "{{ librenms_url }}/api/v0/devices"
            method: POST
            body_format: json
            body:
              hostname: "{{ librenms_client_hostname }}"
              display: "{{ librenms_client_display }}"
              port: "{{ librenms_client_snmp_port }}"
              version: "{{ librenms_client_snmp_version }}"
              community: "{{ librenms_client_snmp_community if librenms_client_snmp_version != 'v3' else omit }}"
              authlevel: "{{ librenms_client_snmp_authlevel if librenms_client_snmp_version == 'v3' else omit }}"
              authname: "{{ librenms_client_snmp_name if librenms_client_snmp_version == 'v3' else omit }}"
              authpass: "{{ librenms_client_snmp_authpass if librenms_client_snmp_version == 'v3' else omit }}"
              authalgo: "{{ librenms_client_snmp_authalgo if librenms_client_snmp_version == 'v3' else omit }}"
              cryptopass: "{{ librenms_client_snmp_cryptopass if librenms_client_snmp_version == 'v3' else omit }}"
              cryptoalgo: "{{ librenms_client_snmp_cryptoalgo if librenms_client_snmp_version == 'v3' else omit }}"
            headers:
              X-Auth-Token: "{{ librenms_api_token }}"
            return_content: true
            validate_certs: false
            status_code:
              - 200
              - 201
          register: _librenms_create_device
          retries: "{{ librenms_task_retries | default('5') }}"
          delay: "{{ librenms_task_delay | default('30') }}"
          until: _librenms_create_device is success
          when: not librenms_client_hostname in librenms_hostnames
          no_log: "{{ librenms_nolog | default(true) }}"

        - name: Disable librenms devices
          ansible.builtin.uri:
            url: "{{ librenms_url }}/api/v0/devices/{{ librenms_client_hostname }}"
            method: PATCH
            body_format: json
            body:
              field:
                - disabled
                - ignore
              data:
                - 1
                - 1
            headers:
              X-Auth-Token: "{{ librenms_api_token }}"
            return_content: true
            validate_certs: false
          when: librenms_client_state == 'disabled'
          no_log: "{{ librenms_nolog | default(true) }}"

        - name: Enable librenms devices
          ansible.builtin.uri:
            url: "{{ librenms_url }}/api/v0/devices/{{ librenms_client_hostname }}"
            method: PATCH
            body_format: json
            body:
              field:
                - disabled
                - ignore
              data:
                - 0
                - 0
            headers:
              X-Auth-Token: "{{ librenms_api_token }}"
            return_content: true
            validate_certs: false
          when: librenms_client_state != 'disabled'
          no_log: "{{ librenms_nolog | default(true) }}"

        - name: Update snmp v2c devices
          ansible.builtin.uri:
            url: "{{ librenms_url }}/api/v0/devices/{{ librenms_client_hostname }}"
            method: PATCH
            body_format: json
            body:
              field:
                - display
                - port
                - version
                - community
              data:
                - "{{ librenms_client_display }}"
                - "{{ librenms_client_snmp_port }}"
                - "{{ librenms_client_snmp_version }}"
                - "{{ librenms_client_snmp_community }}"
            headers:
              X-Auth-Token: "{{ librenms_api_token }}"
            return_content: true
            validate_certs: false
          no_log: "{{ librenms_nolog | default(true) }}"
          when: librenms_client_snmp_version != 'v3'

        - name: Rediscover snmp devices
          ansible.builtin.uri:
            url: "{{ librenms_url }}/api/v0/devices/{{ librenms_client_hostname }}/discover"
            body_format: json
            headers:
              X-Auth-Token: "{{ librenms_api_token }}"
            validate_certs: false
          no_log: "{{ librenms_nolog | default(true) }}"

    - name: Unregister librenms devices
      ansible.builtin.uri:
        url: "{{ librenms_url }}/api/v0/devices/{{ librenms_client_hostname }}"
        method: DELETE
        headers:
          X-Auth-Token: "{{ librenms_api_token }}"
        return_content: true
        validate_certs: false
        status_code:
          - 200
          - 404
      when: librenms_client_state == 'absent'

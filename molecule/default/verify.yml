---
- name: Verify client deployment

  hosts: all

  tasks:

    - name: set general facts
      block:

        - name: gather localhost facts
          ansible.builtin.setup:
          delegate_to: localhost
          delegate_facts: true

        - name: record localhost facts
          ansible.builtin.set_fact:
            librenms_server_hostname: "{{ hostvars['localhost']['ansible_default_ipv4']['address'] }}"
            librenms_client_hostname: "{{ hostvars['localhost']['ansible_default_ipv4']['address'] }}"

    - name: create librenms api token
      when: inventory_hostname in groups[server_group]
      block:

        - name: create api token
          ansible.builtin.command: "php {{ librenms_root }}/addtoken.php {{ librenms_admin_user }}"
          register: _api_cmd

        - name: register server token hash
          ansible.builtin.set_fact:
            librenms_api_token: "{{ api_out.token_hash }}"
          vars:
            api_out: "{{ _api_cmd.stdout }}"

        - name: end play for server vm
          ansible.builtin.meta: end_host

    - name: register client token hash
      ansible.builtin.set_fact:
        librenms_api_token: "{{ librenms_api_tokens | select('!=', '') | first }}"
        librenms_url: "http://{{ librenms_server_hostname }}:8080"
      vars:
        librenms_api_tokens: "{{ groups[server_group] | map('extract', hostvars, 'librenms_api_token') }}"

    - name: check librenms registration
      ansible.builtin.uri:
        url: "{{ librenms_url }}/api/v0/devices?type=all"
        headers:
          X-Auth-Token: "{{ librenms_api_token }}"
        return_content: yes
        validate_certs: no
      register: _librenms_devices
      until: _librenms_devices.json.devices | selectattr('display', 'equalto', inventory_hostname) | length > 0
      retries: 10
      delay: 60

    - name: set librenms device facts
      ansible.builtin.set_fact:
        librenms_device_list:
          - hostname: localhost
            display: server
            state: absent
      when: inventory_hostname in groups[server_group]
      tags: always

    - name: unregister librenms devices
      ansible.builtin.include_role:
        name: pokerops.librenms
      vars:
        librenms_client_install: false
        librenms_client_state: absent

    - name: check librenms client unregistration
      ansible.builtin.uri:
        url: "{{ librenms_url }}/api/v0/devices?type=all"
        headers:
          X-Auth-Token: "{{ librenms_api_token }}"
        return_content: yes
        validate_certs: no
      register: _librenms_devices
      until: inventory_hostname not in (_librenms_devices.json.devices | map(attribute='display'))
      retries: 3
      delay: 60

    - name: check librenms device unregistration
      ansible.builtin.uri:
        url: "{{ librenms_url }}/api/v0/devices?type=all"
        headers:
          X-Auth-Token: "{{ librenms_api_token }}"
        return_content: yes
        validate_certs: no
      vars:
        _registrations: "{{ librenms_device_list | map(attribute='display') | list }}"
        _unregistered: "{{ librenms_device_list | map(attribute='display') | list }}"
      register: _librenms_devices
      until: _registrations | intersect(_unregistered) | length == 0
      when: inventory_hostname in groups[server_group]
      retries: 3
      delay: 60


- name: Verify server deployment

  hosts: server

  tasks:

    - name: verify frontpage content
      ansible.builtin.uri:
        url: http://localhost/
        status_code: 200
      register: _frontpage_content
      until: _frontpage_content is not failed
      retries: 12
      delay: 15

    - name: run librenms validate
      ansible.builtin.command: "{{ librenms_root }}/validate.php"
      register: _librenms_validate_output
      become_user: "{{ librenms_user }}"
      become: true

    - name: debug librenms healthcheck result
      ansible.builtin.debug:
        var: _librenms_validate_output.stdout_lines

---
- name: Server side effect

  hosts: server

  become: true

  tasks:

    - name: Take librenms backup
      ansible.builtin.command: /usr/local/bin/librenms-backup
      register: _backup_script
      until: _backup_script is not failed
      retries: 5
      delay: 5

    - name: Kill mysql connections
      ansible.builtin.command: |
        mysql -u {{ librenms_db_user }} -D {{ librenms_db_name }} -p{{ librenms_db_pass }}
        -e "select concat('KILL ',id,';') from information_schema.processlist"
      changed_when: false

    - name: Drop librenms database
      ansible.builtin.command: |
        mysql -u {{ librenms_db_user }} -p{{ librenms_db_pass }}
        -e "drop database {{ librenms_db_name }};"

    - name: Confirm database does not exist
      ansible.builtin.command: |
        mysql -u {{ librenms_db_user }} -p{{ librenms_db_pass }} \
        -e "show databases;"
      register: _database_output

    - name: Debug librenms database output
      ansible.builtin.debug:
        var: _database_output.stdout_lines

    - name: Verify librenms status after dropping database
      ansible.builtin.command: "{{ librenms_root }}/validate.php"
      become_user: "{{ librenms_user }}"
      become: true
      failed_when: false
      register: _librenms_healthcheck_result

    - name: Debug librenms healthcheck result
      ansible.builtin.debug:
        var: _librenms_healthcheck_result.stderr_lines

    - name: Perform librenms restore
      ansible.builtin.command: /usr/local/bin/librenms-restore


- name: Client side effect

  hosts: all

  become: true

  vars:

    side_effect_version: v2c
    side_effect_community: verify

  tasks:

    - name: Set general facts
      block:

        - name: Gather localhost facts
          ansible.builtin.setup:
          delegate_to: localhost
          delegate_facts: true

        - name: Record localhost facts
          ansible.builtin.set_fact:
            librenms_server_hostname: "{{ hostvars['localhost']['ansible_default_ipv4']['address'] }}"
            librenms_client_hostname: "{{ hostvars['localhost']['ansible_default_ipv4']['address'] }}"

    - name: Create librenms api token
      tags: client
      when: inventory_hostname in groups[server_group]
      block:

        - name: Create api token
          ansible.builtin.command: "php {{ librenms_root }}/addtoken.php {{ librenms_admin_user }}"
          register: _api_cmd

        - name: Register server token hash
          ansible.builtin.set_fact:
            librenms_api_token: "{{ api_out.token_hash }}"
          vars:
            api_out: "{{ _api_cmd.stdout }}"

    - name: Register client token hash
      ansible.builtin.set_fact:
        librenms_api_token: "{{ librenms_api_tokens | select('!=', '') | first }}"
        librenms_url: "http://{{ librenms_server_hostname }}:8080"
      vars:
        librenms_api_tokens: "{{ groups[server_group] | map('extract', hostvars, 'librenms_api_token') }}"

    - name: Set librenms device facts
      ansible.builtin.set_fact:
        librenms_device_list:
          - hostname: localhost
            display: server
            version: "{{ librenms_client_snmp_version }}"
            community: "{{ side_effect_community }}"
      when: inventory_hostname in groups[server_group]
      tags: always

    - name: Reconfigure client with custom v2 community
      ansible.builtin.include_role:
        name: pokerops.librenms
      vars:
        librenms_client_snmp_version: "{{ side_effect_version }}"
        librenms_client_snmp_community: "{{ side_effect_community }}"

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

  post_tasks:

    - name: Post converge verification tasks
      tags: verify
      block:

        - name: Verify local snmp daemon
          ansible.builtin.command: "snmpget -v {{ _version }} -c {{ _community }} localhost .1.3.6.1.2.1.1"
          vars:
            _version: "{{ side_effect_version | regex_replace('^v', '') }}"
            _community: "{{ side_effect_community }}"
          when:
            - inventory_hostname not in groups[server_group]
            - _version != '3'
          changed_when: false

        - name: Check librenms registration
          ansible.builtin.uri:
            url: "{{ librenms_url }}/api/v0/devices?type=all"
            headers:
              X-Auth-Token: "{{ librenms_api_token }}"
            return_content: true
            validate_certs: false
          register: _librenms_devices

        - name: Check librenms registration
          ansible.builtin.uri:
            url: "{{ librenms_url }}/api/v0/devices?type=all"
            headers:
              X-Auth-Token: "{{ librenms_api_token }}"
            return_content: true
            validate_certs: false
          vars:
            attr_json: json
            attr_devices: devices
          register: _librenms_devices
          until:
            - attr_json in _librenms_devices
            - attr_devices in _librenms_devices[attr_json]
            - _librenms_devices[attr_json][attr_devices] | selectattr('display', 'equalto', inventory_hostname) | length > 0
          when: librenms_client_register | bool
          retries: 10
          delay: 60

        - name: Verify device registrations
          when: inventory_hostname in groups[server_group]
          block:

            - name: set librenms device facts - Disabled
              ansible.builtin.set_fact:
                librenms_device_list:
                  - hostname: localhost
                    display: server
                    state: disabled

            - name: Disabled librenms devices
              ansible.builtin.include_role:
                name: pokerops.librenms
              vars:
                librenms_client_install: false

            - name: Query librenms registrations
              ansible.builtin.uri:
                url: "{{ librenms_url }}/api/v0/devices?type=all"
                headers:
                  X-Auth-Token: "{{ librenms_api_token }}"
                return_content: true
                validate_certs: false
              register: _librenms_devices

            - name: Print librenms devices
              ansible.builtin.debug:
                var: _librenms_devices

            - name: Facts librenms device registration
              ansible.builtin.set_fact:
                registrations: "{{ _registrations }}"
                registered: "{{ _registered }}"
                registrations_disabled: "{{ _registrations_disabled }}"
                registrations_disabled_names: "{{ _registrations_disabled_names }}"
                unregistered: "{{ _unregistered }}"
                unregistered_disabled: "{{ _unregistered_disabled }}"
                librenms_disabled_devices: "{{ _librenms_disabled_devices }}"
                librenms_disabled_names: "{{ _librenms_disabled_names }}"
              vars:
                _librenms_device_list: "{{ librenms_device_list }}"
                _registrations: "{{ _librenms_device_list | map(attribute='hostname') | list }}"
                _registrations_disabled: "{{ _librenms_device_list  | selectattr('state', 'defined' ) | selectattr('state', 'equalto', 'disabled') | list }}"
                _registrations_disabled_names: "{{ _registrations_disabled  | map(attribute='hostname') | list }}"
                _registered: "{{ _librenms_devices.json.devices | map(attribute='hostname') | list }}"
                _librenms_disabled_devices: "{{ _librenms_devices.json.devices | selectattr('disabled', 'defined' ) | selectattr('disabled', 'equalto', 1) | list }}"
                _librenms_disabled_names: "{{ _librenms_disabled_devices | map(attribute='hostname') | list }}"
                _unregistered: "{{ _registrations | difference(_registered) | list }}"
                _unregistered_disabled: "{{ _registrations_disabled_names | difference(_librenms_disabled_names) | list }}"

            - name: Verify librenms device registration
              ansible.builtin.assert:
                that:
                  - unregistered | length == 0
                  - librenms_disabled_devices  | length > 0

            - name: Print librenms disabled devices
              ansible.builtin.debug:
                msg: "{{ registrations_disabled_names }}"
